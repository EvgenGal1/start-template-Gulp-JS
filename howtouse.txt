Устан Node.JS
В cmd(откр с админ.) на раб.столе(PS\C:\...\Desktop>) от проблем с правами - $$ Set-ExecutionPolicy RemoteSigned
Или PS C:\Windows\system32> в PowerShell - enter - Y - enter
В cmd - $$  npm install --global gulp-cli

Откр cmd в проекте
++ Созд.информ.файл проекта и устан.пакетов(package.json) - npm init(можно созд. в ручную)
Заполняем анкету. Потом можно подправить.

Откр терминал(можно через редактор) в проекте. Устан Gulp в проект с сохр. версией устан приложений(--save-dev)
$$ npm install gulp --save-dev
+++ package-lock.json(блок версий пакетов) и папка node_modules

Созд. структура Продакшин и Исходников
++ будет 2 папки. созд. исходники(#src - # чтоб было вверху) и авто. Про
В #src созд подпапки и файлы

++ напис. сценария Gulp в файле - gulpfile.js
для теста и проверки на gulpjs.com копим код из "Create a gulpfile" в файл. Примерно такой:
## function defaultTask(cb) {// place code for your default task herecb();}
## exports.default = defaultTask
$$ gulp
примерный вывод:
[
  [03:56:26] Using gulpfile D:\...\Старт. шаблон Gulp+JS\gulpfile.js
  [03:56:26] Starting 'default'...
  [03:56:26] Finished 'default' after 6.23 ms
]

(
Если есть проблемы то отчистка пакето и устан заново.
Для отчистки: $$ npm cache clean --force
Для устан(устан сам себя глобал): $$ npn i npm -g
Далее устан gulp глобал и gulp в проект и после проверка
)

Если всё норм, тест удал. Начин. писать сценарий

Опис в gulpfile.js. Кратко ниже. Прописываем:
Перем. для папок(Про и Исход) - удобно сразу переимен. ввод/вывод
В перем path объекты с путями к п/ф (папкам/файлам) + прослуш.файлы(watch) + отчистка
доп. перем. 

++ пропис Серии выполняемых fn и Сценарии выполнения

+++++ fn/код для сбора/обраб ф/п:
++ html(пишем fn,вкл. в Отслежив в брауз,вкл. в Серию выполн. fn,Связь с Gulp через перем)
++ watchFiles - для Отслеживания файлов в брауз в реале(fn, вкл в Сценарий выполн)
++ css(перем.,fn,Отслеж,Серия,Связь)
++ js(fn,Отслеж,Серия,Связь)
! для старых брайзеров нужно настроить babel - https://www.npmjs.com/package/gulp-babel
++ images(fn,Отслеж,Серия,Связь)

+++++ устан доп plugins:
$$ npm i browser-sync --save-dev - обнов страниц(перем.для plugin,пишем fn,вкл в Сценарий,Связь к gulp)
$$ npm i gulp-file-include --save-dev - сборщик кусков кода/др файлов(шаблонизатор с переменными)(перем.,)
$$ npm i del --save-dev - удаление п/ф (перем.,fn,Серия)
$$ npm i gulp-sass --save-dev - компилятор.sass(scss) в css (перем, в fn css)
$$ npm i gulp-autoprefixer --save-dev - добав вендорные prefix к сво-ам (перем, в fn css)
$$ npm i gulp-group-css-media-queries --save-dev - групп. медиа запросы в конце ф (перем, в fn css)
$$ npm i gulp-clean-css --save-dev - отчист и сжат css (перем, в fn css)
$$ npm i gulp-rename --save-dev - переименвка css в min (перем, в fn css)
$$ npm i gulp-uglify-es --save-dev - отчист и сжат js (перем, в fn js)
$$ npm i gulp-imagemin --save-dev - сжат img (перем, в fn images)

запуск/проверка работы - $$ gulp - выведено норм.





------------------------------------------------------------------------------------------------------------
ВНИМАНИЕ! Не используйте кириллицу в названии папок и файлов!
------------------------------------------------------------------------------------------------------------
Установка и работа с шаблоном (с правами администратора!):
В терминале:
1) npm i
2) gulp 
Шаблон начнет работать в режиме разработчика, без сжатия картинок и кода.

Когда верстка закончена и пришло время грузить на сервер/отдавать заказчику:
В новом окне терминала:
1) gulp build
Выполнится оптимизация кода и картинок. 
После завершения действий галпом, папка с результатом готова к выгрузке на сервер/передаче заказчику

Внимание! 
После выполнения gulp build создаются webp файлы картинок. Также они интегрируются в html и css. 
Следовательно, стоит проверить все ли корректно отображается и работает.
Если после выполнения gulp build файлы редактировались, действие (gulp build) нужно повторить.
------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
Возможные проблемы и их решения:
--------------------------------------
Ошибка node-sass.
Решения:
npm rebuild node-sass
и/или
npm install sass gulp-sass --save-dev
--------------------------------------
Ошибка Pyton
Решени:
npm install --global windows-build-tools
--------------------------------------
Ошибка imagemin.
Варианты решения :
- папки и файлы должны быть названы латиницей без пробелов
- тег img и его содержимое должны быть записаны в одну строку без переносов
- в атрибуте src должен быть указан путь к существующей картинке
------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------
